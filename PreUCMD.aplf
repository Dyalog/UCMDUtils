 PreUCMD;nss;ns;fn;params;fns;line1;parser;em;⎕IO;⎕ML;ns_;en;HELP;nargs;msg;cmd;names;cands;iName;args;help;Nl;Parse
 ⎕IO←1 ⋄ ⎕ML←1 ⋄ en←0 ⋄ em←'' ⋄ msg←0⍴⊂'' ⋄ CallUserCode←{}
 :If 0=⎕NC'DEBUG'
     DEBUG←0
 :EndIf

 :Section UTILS
     Nl←1↓∘∊(⎕UCS 13)∘,¨
     Parse←{
         ##.input('''[^'']+''|"[^"]+"' '-\?+|⍝.*'⎕R'&' ''⊣)←⍬
         parser←⎕NEW ⎕SE.Parser(⌽'^\s*(\S+)\s*' '^\s*' '.+'⎕S'nargs=\1' '' '&'⊢'^\s*⍝]'⎕R''⊢⍵)
         ##.input parser.Parse⍤⊣←⍬
         ##.input.THIS←##.THIS
         ##.input.HELP←HELP
         ##.input.fn←fn
         ##.input.ns←ns
         1:shy←##.input
     }
 :EndSection

 ##.input('''[^'']+''|"[^"]+"' '⍝.*'⎕R'&' ''⊣)←⍬ ⍝ strip comments

 iName←'^\s*([A-Za-z]\w*(\.[A-Za-z]\w*)?)'

 cmd←⊃iName ⎕S'\1'⍠'ML' 1⊢##.input
 ##.input←(iName,'?\s*')⎕R''⍠'ML' 1⊢##.input

 HELP←⌈/0,¯1+'-\?+'⎕S 1⊢'''[^'']+''|"[^"]+"'⎕R''⊢##.input
 ##.input('''[^'']+''|"[^"]+"' '-\?+'⎕R'&' ''⊣)←⍬ ⍝ strip help

 names←'.'(≠⊆⊢)⎕C cmd
 nss←⎕SE.⎕NL ¯9
 :If 0=≢names ⍝ ]
     (ns fn)←0
 :AndIf 0=HELP
     msg,←⊂']' '⍝ this message'
     msg,←⊂'] -?' '⍝ list all command names'
     msg,←⊂'] -??' '⍝ one-line description of all commands'
     msg,←⊂']grp -?' '⍝ list commands in group "grp"'
     msg,←⊂']grp.cmd  -?' '⍝ brief description of command cmd in group "grp"'
     msg,←⊂']grp.cmd -??' '⍝ more thorough description of "]cmd.grp"'
     msg,←⊂']grp.cmd -???' '⍝ even more thorough description, etc.'
     ##.r←Nl'' '─── User Command System Syntax Overview ───',↓⍕↑msg

 :Else
     :If 1=≢names ⍝ call command if unambiguous
     :AndIf '*'≡⎕STACK[3;2] ⍝ called from session
         cands←0 2⍴⊂''
         :For ns :In nss
             :If ('⎕SE.',ns)≢⍕ns_←⎕SE⍎ns
                 :Continue
             :EndIf
             fns←ns_.⎕NL ¯3
             fns⌿⍨←names≡¨⎕C fns
             :For fn :In fns
                 line1←2⊃(ns_.⎕NR fn),'' ''
                 :If '⍝]'≡2↑line1~' '
                     cands⍪←ns fn
                 :EndIf
             :EndFor
         :EndFor
         :Select ≢cands
         :Case 0

         :Case 1
             names←⊣⌿cands
         :Else
             msg,←⊂'Ambigous user command: ]',cmd
             msg,←⊂'Specify one of:'

             args←'^ *' ' +$'⎕R' ' ''⊢##.input
             args/⍨←0<≢##.input
             help←' -',HELP⍴'?'
             help/⍨←0<HELP

             msg,←,∘(args,help)¨{'    ]',⍺,'.',⍵}/cands
             ##.r←Nl msg
             (ns fn)←0
         :EndSelect
     :EndIf
     :If 2=≢names ⍝ call command
         (ns fn)←names
     :EndIf
     :If 0<HELP
         :If 0≡ns
             :For ns :In nss
                 :If ('⎕SE.',ns)≢⍕ns_←⎕SE⍎ns
                     :Continue
                 :EndIf
                 fns←ns_.⎕NL ¯3
                 :For fn :In fns
                     line1←2⊃(ns_.⎕NR fn),'' ''
                     :If '⍝]'≡2↑line1~' '
                         nargs←⍎⊃'0',⍨'\d+'⎕S'&'⍠'ML' 1⊢line1
                         ns ⎕C⍨←1
                         :If 1=HELP ⍝ summary
                             msg,←⊂ns fn
                         :Else
                             ##.input.HELP←1
                             msg,←⊂(']',ns,'.',fn)('⍝ ',⊃⊆##.input(ns_.⍎fn)nargs⍴⊂'')
                         :EndIf
                     :EndIf
                 :EndFor
             :EndFor
             :If 0=≢msg
                 msg,←⊂'No functions declare a user command interface!'
             :Else
                 :If 1=HELP ⍝ only names
                     msg←⊃{⊂(⊃⍺)(⍕⍵)}⌸/↓⍉↑msg ⍝ GROUP   name1  name2  ...
                 :EndIf
                 msg←'' '─── All User Commands ───',↓⍕↑msg
             :EndIf
         :Else
             nss/⍨←(⎕C nss)∊⊂ns
             :Select ≢nss
             :Case 1
                 ns_←⎕SE⍎ns←⊃nss
                 fns←ns_.⎕NL ¯3
                 :If 0≡fn
                     :For fn :In fns
                         line1←2⊃(ns_.⎕NR fn),'' ''
                         :If '⍝]'≡2↑line1~' '
                             nargs←⍎⊃'0',⍨'\d+'⎕S'&'⍠'ML' 1⊢line1
                             Parse line1
                             msg,←⊂(']',ns,'.',fn)('⍝ ',⊃⊆##.input(ns_.⍎fn)nargs⍴⊂'')
                         :EndIf
                     :EndFor
                     msg←Nl''('─── All User Commands in Group "]',ns,'" ───'),↓⍕↑msg
                 :Else
                     fns/⍨←(⎕C fns)∊⊂fn
                     :Select ≢fns
                     :Case 1
                         fn←⊃fns
                         line1←2⊃(ns_.⎕NR fn),'' ''
                         :If '⍝]'≡2↑line1~' '
                             nargs←⍎⊃'0',⍨'\d+'⎕S'&'⍠'ML' 1⊢line1
                             Parse line1
                             msg,←⊂(']',ns,'.',fn)('⍝ ',⊃⊆##.input(ns_.⍎fn)nargs⍴⊂'')
                             msg←''('─── User Command Documentation for "]',ns,'.',fn,'" ───'),↓⍕↑msg
                         :Else
                             msg←⊂'Function "⎕SE.',ns,'.',fn,'" does not declare a user command interface!'
                         :EndIf
                     :Case 0
                         en←6 ⋄ em←'Function "⎕SE.',ns,'.',fn,'" not found!'
                     :Else
                         en←5 ⋄ em←'Only one function with the case-insensitive name "]',fn,'" may exist in ⎕SE.',ns,'!'
                     :EndSelect
                 :EndIf
             :Case 0
                 en←6 ⋄ em←'Command group "]',ns,'" not found!'
             :Else
                 en←5 ⋄ em←'Only one namespace with the case-insensitive name "]',ns,'" may exist in ⎕SE!'
             :EndSelect
         :EndIf
         ##.r←Nl msg
     :ElseIf ∧/ns fn∊0 ⍝ we're done
     :ElseIf 0∊ns fn
         en←16 ⋄ em←'Group and command name must be specified!'
     :Else ⍝ Call!
         nss/⍨←(⎕C nss)∊⊂ns
         :Select ≢nss
         :Case 1
             ns_←⎕SE⍎ns←⊃nss
             fns←ns_.⎕NL ¯3
             fns/⍨←(⎕C fns)∊⊂fn
             :Select ≢fns
             :Case 1
                 fn←⊃fns
                 line1←2⊃(ns_.⎕NR fn),'' ''
                 :If 1=≢'^\s*⍝]'⎕S 3⊢line1
                     Parse line1
                     CallUserCode←##.input{0∩⎕SE.UCMDUtils.DEBUG::⎕SE.UCMDUtils.TrapUCMD ⋄ 85:: ⋄ 1:##.r←1(85⌶)'⍺⍺⎕SE.',⍺⍺.ns,'.',⍺⍺.fn,'⍺⍺.Arguments' ⋄ ⍺⍺}
                 :Else
                     en←11 ⋄ em←'Function ⎕SE.',ns,'.',fn,' does not declare a user command interface!'
                 :EndIf
             :Case 0
                 en←6 ⋄ em←'Command "]',ns,'.',fn,'" not found!'
             :Else
                 en←5 ⋄ em←'Ambiguous command "]',ns,'.',fn,'"!'
             :EndSelect
         :Case 0
             en←6 ⋄ em←'Command group "]',ns,'" not found!'
         :Else
             en←5 ⋄ em←'Ambiguous command group "]',ns,'"!'
         :EndSelect
     :EndIf
     :If ×en
         :If 2=≢⎕SI
             CallUserCode←{⍞←⍵}'USER COMMAND ERROR: ',em,∘⎕UCS 13⍨
         :Else
             CallUserCode←⎕SIGNAL∘⊂('EN'en)('EM' 'USER COMMAND ERROR')('Message'em)⍨
         :EndIf
     :EndIf
 :EndIf
