 PreUCMD;ns;fn;fns;line1;⎕IO;⎕ML;en;HELP;nargs;msg;cmd;names;iName;args;help;Nl;nss;line1s;occur;count;mask;toc;em;syntax;desc
 ⎕IO←1 ⋄ ⎕ML←1 ⋄ en←0 ⋄ em←'' ⋄ msg←0⍴⊂'' ⋄ CallUserCode←{}
 :If 0=⎕NC'DEBUG'
     DEBUG←0
 :EndIf

 Nl←1↓∘∊(⎕UCS 13)∘,¨

 ##.input('''[^'']+''|"[^"]+"' '⍝.*'⎕R'&' ''⊣)←⍬ ⍝ strip comments

 iName←'^\s*([A-Za-z]\w*(\.[A-Za-z]\w*)?)'

 cmd←⊃iName ⎕S'\1'⍠'ML' 1⊢##.input
 ##.input←(iName,'?\s*')⎕R''⍠'ML' 1⊢##.input

 HELP←⌈/0,¯1+'-\?+'⎕S 1⊢'''[^'']+''|"[^"]+"'⎕R''⊢##.input
 ##.input('''[^'']+''|"[^"]+"' '-\?+'⎕R'&' ''⊣)←⍬ ⍝ strip help

 names←'.'(≠⊆⊢)⎕C cmd

 (nss fns line1s)←list

 ⍝ ]    syntax help
 ⍝ ] -? list all
 ⍝ ] -?? list all with 1-line descriptions

 ⍝ ]grp -? list with 1-line descr
 ⍝ ]cmd -?.. help if unambiguous
 ⍝ ]grp.cmd -?...

 ⍝ ]cmd call if unamb
 ⍝ ]grp.cmd
 ⍝ ]grp → ]grp.grp if unamb

 ⍝ ] 4S

 :If 0=≢names ⍝ list
     :If 0=HELP ⍝ ]
         msg,←⊂']' '⍝ this message'
         msg,←⊂'] -?' '⍝ list all command names'
         msg,←⊂'] -??' '⍝ one-line description of all commands'
         msg,←⊂''
         msg,←⊂']grp. -?' '⍝ list commands in group "grp"'
         msg,←⊂']grp.cmd -?' '⍝ brief description of command cmd in group "grp"'
         msg,←⊂']grp.cmd -??' '⍝ more thorough description of "]cmd.grp"'
         msg,←⊂']grp.cmd -???' '⍝ further description, etc.'
         msg,←⊂'' ''
         msg,←⊂']grp.cmd [args]' '⍝ call command cmd in group "grp"'
         msg←'' '─── User Command System Syntax Overview ───',↓⍕↑msg
         msg,←'' 'Group name can be omitted if the call is unambiguous'

     :Else  ⍝ ] -?...
         :If 0=≢fns
             msg,←⊂'No functions declare a user command interface!'
         :Else
             :If 1=HELP ⍝ ] -? (only names)
                 msg←(1 ⎕C nss){⊂(']',⊃⍺)(⍕⍵)}⌸fns ⍝ GROUP   name1  name2  ...
             :Else      ⍝ ] -?? (names and 1-liner descriptions)
                 ##.input←Parse''
                 ##.input.HELP←1
                 :For ns fn line1 :InEach nss fns line1s
                     nargs←⍎⊃'0',⍨'\d+'⎕S'&'⍠'ML' 1⊢line1
                     syntax←']',(1 ⎕C ns),'.',fn
                     :Trap 6
                         desc←'⍝ ',⊃⊆##.input(ns ⎕SE.⍎fn)nargs⍴⊂''
                     :Else
                         desc←'⍝ (no description available)'
                     :EndTrap
                     msg,←⊂syntax desc
                 :EndFor
             :EndIf
             msg←'' '─── All User Commands ───',↓⍕↑msg
         :EndIf
     :EndIf
     ##.r←Nl msg
 :ElseIf 3≤≢names ⍝ ]abc.def.ghi
 :OrIf ¯1=40 ⎕ATX cmd
     en←2 ⋄ em←Nl'Invalid user command call. For syntax information, do:' '    ]'
 :Else ⍝ ]cmd or ]grp.cmd or ]grp (which means ]grp.grp)
     toc←nss,⍪fns
     :If 1=≢names ⍝ call command if unambiguous
         count←+/,occur←names≡¨⍥⎕C toc
         :If '*'≢⎕STACK[3;2] ⍝ called from session
             en←11 ⋄ em←'Both group and command names must be specified when calling user commands under program control.'
         :ElseIf 0=count
         :OrIf (1=count)∧(∨/⊣/occur)
             en←6 ⋄ em←Nl'Unknown user command. To list all commands, do:' '    ] -?'
         :ElseIf (2≤count)∧(1≠+/,1 1⍷occur)∧(1≠+/⊢/occur) ⍝ only allow 2 if grp.grp or there's a single fn of that name (ignoring any grp of that name)
             en←16 ⋄ msg,←⊂'Ambigous user command: ]',cmd
             msg,←⊂'Specify one of:'

             args←'^ *' ' +$'⎕R' ' ''⊢##.input
             args/⍨←0<≢##.input
             help←' -',HELP⍴'?'
             help/⍨←0<HELP

             (nss fns)/⍨←⊂⊢/occur
             msg,←,∘(args,help)¨nss{'    ]',⍺,'.',⍵}¨fns
             em←Nl msg
         :Else ⍝ count=1 or grp.grp
             names←⊣⌿toc⌿⍨⊢/occur
         :EndIf
     :EndIf
     :If ×en
         :If 2=≢⎕SI
             CallUserCode←{⍞←⍵}'USER COMMAND ERROR: ',em,∘⎕UCS 13⍨
         :Else
             CallUserCode←⎕SIGNAL∘⊂('EN'en)('EM' 'USER COMMAND ERROR')('Message'em)⍨
         :EndIf
     :Else
         (ns fn)←names
         ⍝ specific known existing command
         line1←line1s⊃⍨toc⍳ns fn
         :If 0<HELP
             nargs←⍎⊃'0',⍨'\d+'⎕S'&'⍠'ML' 1⊢line1
             ##.input←Parse line1
             msg,←⊂']',(1 ⎕C ns),'.',fn
             :Trap 6
                 msg,←⊆##.input(ns ⎕SE.⍎fn)nargs⍴⊂''
             :Else
                 msg,←⊂'(no help available)'
             :EndTrap
             msg←''('─── User Command Documentation for "]',ns,'.',fn,'" ───'),⊆msg
             ##.r←Nl msg
         :Else ⍝ Call!
             ##.input←Parse line1
             '##.input'⎕NS'ns' 'fn'
             CallUserCode←##.input{
                 0∩⎕SE.UCMDUtils.DEBUG::⎕SE.UCMDUtils.TrapUCMD
                 85::
                 ##.r←1(85⌶)'⍺⍺⎕SE.',⍺⍺.ns,'.',⍺⍺.fn,'⍺⍺.Arguments'}
         :EndIf
     :EndIf
 :EndIf
